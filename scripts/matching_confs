#!/usr/bin/env python
'''
Display the information on matching configurations from a set of files.'
'''

__author__ = 'Miguel Ramos Pernas'
__email__  = 'miguel.ramos.pernas@cern.ch'


# Python
from argparse import ArgumentParser
import json

# Local
import confmgr

# Build the parser
parser = ArgumentParser(description = 'Display the information on matching '\
                        'configurations in the given file(s)')
parser.add_argument('files', nargs = '+',
                    help = 'Set of files to parse'
)
parser.add_argument('--skip', '-s', type = json.loads,
                    default = {},
                    help = 'Elements to omit. In bash, the ' \
                    'syntax must be \'{"key": ["v1", "v2"]}\''
)
args = parser.parse_args()

# Iterate over the input files to print the configurations

confs = zip(args.files, map(confmgr.ConfMgr.from_file, args.files))

ic = 0
while ic < len(confs):

    flst, cfgs = zip(*confs)

    c = cfgs[ic]

    ms = confmgr.check_configurations(c, cfgs[ic + 1:], skip = args.skip)

    if len(ms) > 0:

        matches = [confs[ic][0]]
        remove  = []
        for m in ms:

            i = cfgs.index(m)

            matches.append(flst[i])

            remove.append(i)

        for i in reversed(remove):
            del confs[i]

        print('-- Found {} files with the same '\
            'configuration: {}'.format(len(ms) + 1, matches))

        print('--- Configuration:\n{}'.format(c))

    ic += 1
